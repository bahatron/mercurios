#!/usr/bin/node

const http = require("http");
const expressApp = require("../dist/http/server").default;
const $logger = require("../dist/services/logger").default;
const createWsServer = require("../dist/websocket/server").default;
const $mysql = require("../dist/services/mysql").default;

const PORT = 3000;

const HTTP_SERVER = new http.Server(expressApp);

const WEBSOCKET_SERVER = createWsServer(HTTP_SERVER);

$logger.debug("debug mode on");

process
    .on("unhandledRejection", (reason, promise) => {
        $logger.warning(reason);
        $logger.debug("PROCESS: unhlanded rejection", promise);
    })
    .on("uncaughtException", err => {
        $logger.error(err.message);
        $logger.debug(err);
        process.exit(-1);
    });

$mysql.migrate
    .latest()
    .then(function onMigrationSucess() {
        [(HTTP_SERVER, WEBSOCKET_SERVER)].forEach(server =>
            server.on("listening", () => {
                $logger.info(
                    `${server.constructor.name} server listening on port ${PORT}`
                );

                server.on("listening", () => {
                    $logger.error(
                        `${server.constructor.name} server error: ${err.message}`
                    );
                });
            })
        );

        HTTP_SERVER.listen(PORT);
    })
    .catch(err => {
        switch (err.code) {
            case "ER_TABLE_EXISTS_ERROR":
                return;
            default:
            // nothing
        }

        throw err;
    });
